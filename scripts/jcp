#!/bin/bash

print_usage() {
	echo "Usage: jcp <command> [problem] [options]"
	echo "Available commands:"
	echo "  install   install jcp by creating softlink"
	echo "  compile <problem> [language]   compile program"
	echo "  run <problem> [language]       compile and run programs"
	echo "  test <problem> [language]      compile and test program"
	echo "Available languages: c,c++,pascal,java,python"
}

compile () {
	problem=$1
	language=c++
	if [ $# -gt 1 ]; then
		language=$2
	fi

	failed=false
	echo "compiling problem $problem" 1>&2

	if [ ! -d .jcp ]; then
		echo "Creating jcp directory" 1>&2
		mkdir .jcp
		if [ ! -d .jcp ]; then
			echo "Cannot creating .jcp directory, aborted" 1>&2
			exit 1
		fi
	fi
	echo "" > .jcp/compile_error 1>&2

	if [[ $language = c++ ]]; then
		if [ -f $problem.cpp ]; then
			filename=$problem.cpp
		elif [ -f $problem.cc ]; then
			filename=$problem.cc
		else
			filename=$problem.c++
		fi

		echo "compiling c++ solution: $filename" 1>&2
		
		compiledDate=$(date +%s -r .jcp/$problem 2> /dev/null || echo -n 0)
		sourceDate=$(date +%s -r $filename)
		if [ $compiledDate -gt $sourceDate ]; then
			echo -e "\e[33mSkipped because c++ solution already compiled\e[0m" 1>&2
		else
			g++ $filename -Wall -O2 -g -std=c++11 -static -pipe -o .jcp/$problem > .jcp/compile.tmp 2>&1
			if [ $? -eq 0 ]; then
				echo -e "\e[32mSuccess compiling c++ solution\e[0m" 1>&2
			else
				echo -e "\e[31mFailed compiling c++ solution\e[0m" 1>&2
				failed=true
				cat .jcp/compile.tmp >> .jcp/compile_error
			fi
		fi
	fi

	if [ $language = c ]; then
		echo "compiling c solution: $problem.c" 1>&2

		compiledDate=$(date +%s -r .jcp/$problem 2> /dev/null || echo -n 0)
		sourceDate=$(date +%s -r $problem.c)
		if [ $compiledDate -gt $sourceDate ]; then
			echo -e "\e[33mSkipped because c solution already compiled\e[0m" 1>&2
		else
			gcc $problem.c -Wall -O2 -g -static -pipe -o .jcp/$problem > .jcp/compile.tmp 2>&1
			if [ $? -eq 0 ]; then
				echo -e "\e[32mSuccess compiling c solution\e[0m" 1>&2
			else
				echo -e "\e[31mFailed compiling c solution\e[0m" 1>&2
				failed=true
				cat .jcp/compile.tmp >> .jcp/compile_error
			fi
		fi
	fi

	if [ $language = pascal ]; then
		echo "compiling pascal solution: $problem.pas" 1>&2

		compiledDate=$(date +%s -r .jcp/$problem 2> /dev/null || echo -n 0)
		sourceDate=$(date +%s -r $problem.pas)
		if [ $compiledDate -gt $sourceDate ]; then
			echo -e "\e[33mSkipped because pascal solution already compiled\e[0m" 1>&2
		else
			fpc -viwn -O2 -Sg -XS -o.jcp/$problem $problem.pas > .jcp/compile.tmp 2>&1
			if [ $? -eq 0 ]; then
				echo -e "\e[32mSuccess compiling pascal solution\e[0m" 1>&2
			else
				echo -e "\e[31mFailed compiling pascal solution\e[0m" 1>&2
				failed=true
				cat .jcp/compile.tmp >> .jcp/compile_error
			fi
		fi
	fi

	if [ $language = python ]; then
		echo "skipping python solution: $problem.py" 1>&2
		cp $problem.py .jcp/$problem.py > .jcp/compile.tmp 2>&1
		if [ $? -eq 0 ]; then
			echo -e "\e[32mSuccess copying python solution\e[0m" 1>&2
		else
			echo -e "\e[31mFailed copying python solution\e[0m" 1>&2
			failed=true
			cat .jcp/compile.tmp >> .jcp/compile_error
		fi
	fi

	if [ $language = java ]; then
		echo "compiling java solution: $problem.java" 1>&2

		compiledDate=$(date +%s -r .jcp/$problem.class 2> /dev/null || echo -n 0)
		sourceDate=$(date +%s -r $problem.java)
		if [ $compiledDate -gt $sourceDate ]; then
			echo -e "\e[33mSkipped because java solution already compiled\e[0m" 1>&2
		else
			javac -encoding UTF-8 -d .jcp $problem.java > .jcp/compile.tmp 2>&1
			if [ $? -eq 0 ]; then
				echo -e "\e[32mSuccess compiling java solution\e[0m" 1>&2
			else
				echo -e "\e[31mFailed compiling java solution\e[0m" 1>&2
				failed=true
				cat .jcp/compile.tmp >> .jcp/compile_error
			fi
		fi
	fi

	if [ $failed = true ]; then
		echo -ne "\e[31m" 1>&2
		cat .jcp/compile_error 1>&2
		echo -e "\e[0m" 1>&2
	fi
}

run() {
	language=c++
	if [ $# -gt 1 ]; then
		language=$2
	fi
	compile $1 $language

	if [[ $language = c++ || $language = c || $language = pascal ]]; then
		.jcp/$1
	elif [ $language = python ]; then
		python3 .jcp/$1
	elif [ $language = java ]; then
		java -classpath .jcp $1
	else
		echo -e "\e[31mCannot find executable file\e[0m"
	fi
}

testing() {
	problem=$1
	language=c++
	if [ $# -gt 1 ]; then
		language=$2
	fi

	files=( $(ls | grep -e "$problem.*in") )

	for file in "${files[@]}"
	do
		len=$(wc -m <<< $file)
		outputfile=$(head -c $(($len-3)) <<< $file)out
		
		run $problem $language < $file > .jcp/$outputfile
		
		echo -n "Testing using inputfile [$file]: "
		if [ -f $outputfile ]; then
			diff $outputfile .jcp/$outputfile
			if [ $? -eq 0 ]; then
				echo -e "\e[32mCorrect\e[0m"
			else
				echo -e "\e[31mWrong\e[0m"
			fi
		else
			echo "output file successfully written to .jcp/$outputfile"
		fi
	done
}

install() {
	ln -s $(pwd)/${BASH_SOURCE[0]} /usr/bin/jcp
}

if [ $# -lt 1 ]; then
    print_usage
    exit 1
fi

if [ $1 = "install" ]; then
	install $0
elif [ $1 = "compile" ]; then
	if [ $# -lt 2 ]; then
		echo "Please specify problem name"
		exit 1
	fi

	if [ $# -gt 2 ]; then
    	compile $2 $3
	else
		compile $2
	fi
elif [ $1 = "run" ]; then
	if [ $# -lt 2 ]; then
		echo "Please specify problem name"
		exit 1
	fi

	if [ $# -gt 2 ]; then
    	run $2 $3
	else
		run $2
	fi
elif [ $1 = "test" ]; then
	if [ $# -gt 2 ]; then
    	testing $2 $3
	else
		testing $2
	fi
else
    print_usage
    exit 1
fi
 